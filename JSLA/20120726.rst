==============
July 26, 2012
==============

* Hosted by http://www.citygrid.com/

Backbone: The framework that isn't
====================================

* by Daniel Hengeveld

    * http://twitter.com/thedaniel
    * http://www.favortree.com

.. note:: Presenter used a presentation tool that doesn't have a back button. Ahem.

Lots of hot client frameworks
------------------------------

* Angular
* Ember
* Knockout
* Spine
* Backbone

Backbone is kind of opinionated
-----------------------------------

The fact that it leaves out even basic framework structure yet makes you make your own decisions

* but you shouldn't have to rewrite boilerplate
* and you should still have a set of drop-in components that work well together
* You should have the freedom to do what you want.

What do frameworks provide?
---------------------------------------

* Models
* Views
* Controllers
* Presenters
* Observers
* Routers

In other words, the glue you need to make something work.

What does backbone provide?
------------------------------

* Models

.. code-block:: javascript

    var view - new SandwichView({model: rueben});
    // view.model attribute set to reuben
    
* Events instead of callbacks

.. code-block:: javascript

    this.collection.on('add', this.addItemView, this);
    
    function(item){
        view.$('.js.item.container').append(
            (new SomeItemView({model:item})).render().el
        );
    }
    
* Ability to combine template context and user data

.. code-block:: javascript

    var BaseView = Backbone.View.extend({
        // snip giant chunk of code
    });
    
* Do the anti-pattern of having a fat router

.. code-block:: javascript

    app = Backbone.Router.Extend({
        // snip giant router function
    
    });
    
Presenter's opinions about Backbone 
------------------------------------

* Provides Tight coupling between models and views that represent them.
* 4 classes and a default sync sync method and kid of sets you loose with them
* Doesn't force you to follow a 'Backbone Way'.
* If your app isn't trivial, Backbone might not be the right choice
* If you need to handle lots of DOM and JS executions, Backbone might be a right choice.

Going Native: Practical scripting with the JavaScript Image Object
==================================================================

A Practical JavaScript talk

* Aaron Martin

    * http://twitter.com/citygridmedia
    * http://www.citygrid.com/
    * Big fan of Mootools (http://en.wikipedia.org/wiki/Mootools)
    
.. note:: This was an AWESOME talk. Great to see how digging into the fundamentals can allow you to do some really impressive things with a tiny bit of code.

What can the Image object do?
-----------------------------------

* Handle Image Data
* Server Communication (pre AJAX)
* Analytics
* Page Performance

Basic Image Object
-------------------

.. code-block:: javascript

    var foo = new Image();
    foo.src = url;
    if(foo.complete) return true
    else return false
    
Image Events
--------------

.. code-block:: javascript

    foo.onerror=function(){}
    // 404
    foo.onsuccess=function(){}
    // 200
    foo.onabort=function(){}
    // cient timeout

image_beacon.js
----------------------------

To see events fired by rollover, these send out business processes on rollovers

.. code-block:: javascript

    var quirkyURL = 'http://url.xyz'
    var backupURL = 'http://url2.xyz'
    
    var ms = 500;
    var totalms = 5000;
    var tries = Math.ceil(totalms/ms);
    var beacon = new Image();
    
    // create a recursive function
    var check = function(){
        if (beacon.complete == false){
            if (tries--){
                // keep on checking until we run out of tried
                setTimeout(function(){check()}, ms); 
            }
            else {
                window.removeEvent('unload', quickSend);
                beacon.src = backup; // never went so we go to backup location
            }
        }
        else{
            window.removeEvent('unload', quickSend);
            //ahhhhhhhh don't leave. Need. Moar. Time......
        }
    
    };
    
    //failsafe
    var quickSend = window.addEvent('unload', function(){
        tries = 0;
        check();
    });
    
    // missing code here
    // missing code here
    // missing code here        
    
image_lazyload.js
-------------------

How to load things as the page is scrolled:

.. code-block:: javascript

    var img = new Image();
    
    img.onload=function(){
        el.src = img.src;
    };
    
    img.onerror=function(){
        el.src = (config.fallback)? config.fallback: "about:blank";
    };
    
    img.src = (config.src) ? config.src : config.fallback;
    
    
The point of it all
-------------------

* Adding in Frameworks slows things down. If you have a huge amount of data going back and forward on the site, say images, then loading JavaScript frameworks will slow you down.

* If you can figure out how to do it in Native JavaScript in 4 lines of code, that's better than loading Mootools or JQuery.